     1                                          ORG 0x7c00 ;伪指令，告诉编译器第一条指令的地址是0x7c00,cpu并不执行
     2 00007C00 EB 4E                           	JMP		readinit
     3 00007C02 90                              	DB		0x90
     4 00007C03 48 45 4C 4C 4F 49 50 4C         	DB		"HELLOIPL"		; 启动区的名称可以是任意字符（8字节） 作者：白羽b612 https://www.bilibili.com/read/cv7922792/ 出处：bilibili
     5 00007C0B 0200                            	DW		512				; 每个扇区（sector）的大小（必须为512字节） 作者：白羽b612 https://www.bilibili.com/read/cv7922792/ 出处：bilibili
     6 00007C0D 01                              	DB		1				;  簇（cluster）的大小（必须为1个扇区） 作者：白羽b612 https://www.bilibili.com/read/cv7922792/ 出处：bilibili
     7 00007C0E 0001                            	DW		1				; FAT的起始位置（一般从第一个扇区开始） 作者：白羽b612 https://www.bilibili.com/read/cv7922792/ 出处：bilibili
     8 00007C10 02                              	DB		2				; FAT的个数（必须为2） 作者：白羽b612 https://www.bilibili.com/read/cv7922792/ 出处：bilibili
     9 00007C11 00E0                            	DW		224				; 根目录大小（一般设为224项）
    10 00007C13 0B40                            	DW		2880			; 该磁盘的大小，共2880扇区
    11 00007C15 F0                              	DB		0xf0			; 磁盘的种类
    12 00007C16 0009                            	DW		9				; FAT的长度 9扇区
    13 00007C18 0012                            	DW		18				; 1个磁道有几个扇区
    14 00007C1A 0002                            	DW		2				; 有几个磁头
    15 00007C1C 00000000                        	DD		0				; 不适用分区
    16 00007C20 00000B40                        	DD		2880			; 重写一次磁盘大小
    17 00007C24 00 00 29                        	DB		0,0,0x29		; 意义不明，固定
    18 00007C27 FFFFFFFF                        	DD		0xffffffff		; （可能是）卷标号码
    19 00007C2B 48 41 52 49 42 4F 54 45 4F 53   	DB		"HARIBOTEOS "	; 磁盘的名称
       00007C35 20 
    20 00007C36 46 41 54 31 32 20 20 20         	DB		"FAT12   "		; 磁盘格式名称
    21 00007C3E 00 00 00 00 00 00 00 00 00 00   	RESB	18				; 空出18字节
       00007C48 00 00 00 00 00 00 00 00 
    22 00007C50                                 ;day3之读磁盘，从C0-H0-S1 读到 C10-H1-S18,C表示柱面，H表示磁头，S表示扇区
    23 00007C50                                 ;一共（10*2*18）*512=18KB(184320)字节。
    24 00007C50                                 ;数据读到从0x8000开始的连续18KB字节的内存中。
    25 00007C50                                 readinit:
    26 00007C50 BC 7C00                         	MOV SP,0x7c00
    27 00007C53 BE 0820                         	MOV SI,0x0820
    28 00007C56 8E C6                           	MOV ES,SI  ;把拓展段寄存器设置为0x0820,因为缓冲地址的计算方式是ES*16+BX。
    29 00007C58                                 	
    30 00007C58 B5 00                           	MOV CH,0    ;设置读取第0柱面
    31 00007C5A B1 02                           	MOV CL,2    ;设置读取第2扇区
    32 00007C5C B6 00                           	MOV DH,0    ;设置读取第0磁头
    33 00007C5E BB 0000                         	MOV BX,0    ;从ES*16+BX=8200开始存
    34 00007C61                                 readloop:
    35 00007C61 BE 0000                         	MOV SI,0
    36 00007C64                                 retry:
    37 00007C64 B4 02                           	MOV AH,0x02 ;设置为读盘
    38 00007C66 B0 01                           	MOV AL,1    ;设置每次中断读取一个扇区
    39 00007C68 B2 00                           	MOV DL,0    ;驱动器号填0
    40 00007C6A CD 13                           	INT 0x13
    41 00007C6C 73 10                           	JNC next   ;如果成功读取就跳转到next
    42 00007C6E 83 C6 01                        	ADD SI,1
    43 00007C71 83 FE 05                        	CMP SI,5   
    44 00007C74 73 4D                           	JAE load_error   ;如果重试超过5次，则跳转到错误
    45 00007C76 B4 00                           	MOV AH,0x00
    46 00007C78 B2 00                           	MOV DL,0
    47 00007C7A CD 13                           	INT 0x13    ;重置磁盘
    48 00007C7C EB E6                           	JMP retry	
    49 00007C7E                                 next:
    50 00007C7E 8C C0                           	MOV AX,ES
    51 00007C80 05 0020                         	ADD AX,512/16
    52 00007C83 8E C0                           	MOV ES,AX
    53 00007C85 80 C1 01                        	ADD CL,1
    54 00007C88 80 F9 12                        	CMP CL,18
    55 00007C8B 76 D4                           	JBE readloop
    56 00007C8D B1 01                           	MOV CL,1
    57 00007C8F 80 C6 01                        	ADD DH,1
    58 00007C92 80 FE 02                        	CMP DH,2
    59 00007C95 72 CA                           	JB readloop
    60 00007C97 B6 00                           	MOV DH,0
    61 00007C99 80 C5 01                        	ADD CH,1
    62 00007C9C 80 FD 0A                        	CMP CH,10
    63 00007C9F 72 C0                           	JB readloop
    64 00007CA1 EB 00                           	JMP entry
    65 00007CA3                                 entry:
    66 00007CA3 88 2E 0FF0                      	MOV	[0x0ff0],CH
    67 00007CA7 E9 4556                         	JMP 0xc200
    68 00007CAA BE 7CC8                         	MOV SI,data
    69 00007CAD                                 putloop:
    70 00007CAD                                     ;为显卡中断做参数准备
    71 00007CAD 8A 04                               MOV AL,[SI] ;AL 要打印的字符
    72 00007CAF 3C 00                               CMP AL,0
    73 00007CB1 74 0D                           	JE end
    74 00007CB3 B4 0E                               MOV AH,0x0e ;操作码，0x0e是打印字符
    75 00007CB5 B3 0F                               MOV BL,15   ;颜色码
    76 00007CB7 B7 00                               MOV BH,0    ;规定填0
    77 00007CB9 CD 10                               INT 0x10    ;显卡中断，填充好AL,AH,BL,BH,进行显卡中断将显示一个字符
    78 00007CBB 83 C6 01                            ADD SI,1
    79 00007CBE EB ED                               JMP putloop
    80 00007CC0                                 end:
    81 00007CC0 F4                                  HLT
    82 00007CC1 EB FD                               JMP end
    83 00007CC3                                 load_error:
    84 00007CC3 BE 7CD6                         	MOV SI,load_error_msg
    85 00007CC6 EB E5                           	JMP putloop
    86 00007CC8                                 data:
    87 00007CC8 0A                                  DB 0x0a ;换行
    88 00007CC9 68 65 6C 6C 6F 5F 77 6F 72 6C       DB "hello_worl!"
       00007CD3 21 
    89 00007CD4 0A                                  DB 0x0a ;换行
    90 00007CD5 00                                  DB 0 ;结束符
    91 00007CD6                                 load_error_msg:
    92 00007CD6 0A                              	DB 0x0a ;换行
    93 00007CD7 6C 6F 61 64 5F 65 72 72 6F 72       DB "load_error!"
       00007CE1 21 
    94 00007CE2 0A                                  DB 0x0a ;换行
    95 00007CE3 00                              	DB 0 ;结束符
    96 00007CE4                                 fill:
    97 00007CE4 00 00 00 00 00 00 00 00 00 00       RESB 0x7dfe-$
       00007CEE 00 00 00 00 00 00 00 00 00 00 
       00007CF8 00 00 00 00 00 00 00 00 00 00 
       00007D02 00 00 00 00 00 00 00 00 00 00 
       00007D0C 00 00 00 00 00 00 00 00 00 00 
       00007D16 00 00 00 00 00 00 00 00 00 00 
       00007D20 00 00 00 00 00 00 00 00 00 00 
       00007D2A 00 00 00 00 00 00 00 00 00 00 
       00007D34 00 00 00 00 00 00 00 00 00 00 
       00007D3E 00 00 00 00 00 00 00 00 00 00 
       00007D48 00 00 00 00 00 00 00 00 00 00 
       00007D52 00 00 00 00 00 00 00 00 00 00 
       00007D5C 00 00 00 00 00 00 00 00 00 00 
       00007D66 00 00 00 00 00 00 00 00 00 00 
       00007D70 00 00 00 00 00 00 00 00 00 00 
       00007D7A 00 00 00 00 00 00 00 00 00 00 
       00007D84 00 00 00 00 00 00 00 00 00 00 
       00007D8E 00 00 00 00 00 00 00 00 00 00 
       00007D98 00 00 00 00 00 00 00 00 00 00 
       00007DA2 00 00 00 00 00 00 00 00 00 00 
       00007DAC 00 00 00 00 00 00 00 00 00 00 
       00007DB6 00 00 00 00 00 00 00 00 00 00 
       00007DC0 00 00 00 00 00 00 00 00 00 00 
       00007DCA 00 00 00 00 00 00 00 00 00 00 
       00007DD4 00 00 00 00 00 00 00 00 00 00 
       00007DDE 00 00 00 00 00 00 00 00 00 00 
       00007DE8 00 00 00 00 00 00 00 00 00 00 
       00007DF2 00 00 00 00 00 00 00 00 00 00 
       00007DFC 00 00 
    98 00007DFE 55 AA                               DB 0x55,0xaa